'use strict';

const convert = require('../../util/convert.js');

/**
 * @class
 * @alias module:LeagueWrapper/dto/lolStaticData~BasicDataStatsDto
 * @property {number} FlatArmorMod
 * @property {number} FlatAttackSpeedMod
 * @property {number} FlatBlockMod
 * @property {number} FlatCritChanceMod
 * @property {number} FlatCritDamageMod
 * @property {number} FlatEXPBonus
 * @property {number} FlatEnergyPoolMod
 * @property {number} FlatEnergyRegenMod
 * @property {number} FlatHPPoolMod
 * @property {number} FlatHPRegenMod
 * @property {number} FlatMPPoolMod
 * @property {number} FlatMPRegenMod
 * @property {number} FlatMagicDamageMod
 * @property {number} FlatMovementSpeedMod
 * @property {number} FlatPhysicalDamageMod
 * @property {number} FlatSpellBlockMod
 * @property {number} PercentArmorMod
 * @property {number} PercentAttackSpeedMod
 * @property {number} PercentBlockMod
 * @property {number} PercentCritChanceMod
 * @property {number} PercentCritDamageMod
 * @property {number} PercentDodgeMod
 * @property {number} PercentEXPBonus
 * @property {number} PercentHPPoolMod
 * @property {number} PercentHPRegenMod
 * @property {number} PercentLifeStealMod
 * @property {number} PercentMPPoolMod
 * @property {number} PercentMPRegenMod
 * @property {number} PercentMagicDamageMod
 * @property {number} PercentMovementSpeedMod
 * @property {number} PercentPhysicalDamageMod
 * @property {number} PercentSpellBlockMod
 * @property {number} PercentSpellVampMod
 * @property {number} rFlatArmorModPerLevel
 * @property {number} rFlatArmorPenetrationMod
 * @property {number} rFlatArmorPenetrationModPerLevel
 * @property {number} rFlatCritChanceModPerLevel
 * @property {number} rFlatCritDamageModPerLevel
 * @property {number} rFlatDodgeMod
 * @property {number} rFlatDodgeModPerLevel
 * @property {number} rFlatEnergyModPerLevel
 * @property {number} rFlatEnergyRegenModPerLevel
 * @property {number} rFlatGoldPer10Mod
 * @property {number} rFlatHPModPerLevel
 * @property {number} rFlatHPRegenModPerLevel
 * @property {number} rFlatMPModPerLevel
 * @property {number} rFlatMPRegenModPerLevel
 * @property {number} rFlatMagicDamageModPerLevel
 * @property {number} rFlatMagicPenetrationMod
 * @property {number} rFlatMagicPenetrationModPerLevel
 * @property {number} rFlatMovementSpeedModPerLevel
 * @property {number} rFlatPhysicalDamageModPerLevel
 * @property {number} rFlatSpellBlockModPerLevel
 * @property {number} rFlatTimeDeadMod
 * @property {number} rFlatTimeDeadModPerLevel
 * @property {number} rPercentArmorPenetrationMod
 * @property {number} rPercentArmorPenetrationModPerLevel
 * @property {number} rPercentAttackSpeedModPerLevel
 * @property {number} rPercentCooldownMod
 * @property {number} rPercentCooldownModPerLevel
 * @property {number} rPercentMagicPenetrationMod
 * @property {number} rPercentMagicPenetrationModPerLevel
 * @property {number} rPercentMovementSpeedModPerLevel
 * @property {number} rPercentTimeDeadMod
 * @property {number} rPercentTimeDeadModPerLevel
 */
class BasicDataStatsDto {
  constructor(data) {
    this.FlatArmorMod = convert(data.FlatArmorMod, Number);
    this.FlatAttackSpeedMod = convert(data.FlatAttackSpeedMod, Number);
    this.FlatBlockMod = convert(data.FlatBlockMod, Number);
    this.FlatCritChanceMod = convert(data.FlatCritChanceMod, Number);
    this.FlatCritDamageMod = convert(data.FlatCritDamageMod, Number);
    this.FlatEXPBonus = convert(data.FlatEXPBonus, Number);
    this.FlatEnergyPoolMod = convert(data.FlatEnergyPoolMod, Number);
    this.FlatEnergyRegenMod = convert(data.FlatEnergyRegenMod, Number);
    this.FlatHPPoolMod = convert(data.FlatHPPoolMod, Number);
    this.FlatHPRegenMod = convert(data.FlatHPRegenMod, Number);
    this.FlatMPPoolMod = convert(data.FlatMPPoolMod, Number);
    this.FlatMPRegenMod = convert(data.FlatMPRegenMod, Number);
    this.FlatMagicDamageMod = convert(data.FlatMagicDamageMod, Number);
    this.FlatMovementSpeedMod = convert(data.FlatMovementSpeedMod, Number);
    this.FlatPhysicalDamageMod = convert(data.FlatPhysicalDamageMod, Number);
    this.FlatSpellBlockMod = convert(data.FlatSpellBlockMod, Number);
    this.PercentArmorMod = convert(data.PercentArmorMod, Number);
    this.PercentAttackSpeedMod = convert(data.PercentAttackSpeedMod, Number);
    this.PercentBlockMod = convert(data.PercentBlockMod, Number);
    this.PercentCritChanceMod = convert(data.PercentCritChanceMod, Number);
    this.PercentCritDamageMod = convert(data.PercentCritDamageMod, Number);
    this.PercentDodgeMod = convert(data.PercentDodgeMod, Number);
    this.PercentEXPBonus = convert(data.PercentEXPBonus, Number);
    this.PercentHPPoolMod = convert(data.PercentHPPoolMod, Number);
    this.PercentHPRegenMod = convert(data.PercentHPRegenMod, Number);
    this.PercentLifeStealMod = convert(data.PercentLifeStealMod, Number);
    this.PercentMPPoolMod = convert(data.PercentMPPoolMod, Number);
    this.PercentMPRegenMod = convert(data.PercentMPRegenMod, Number);
    this.PercentMagicDamageMod = convert(data.PercentMagicDamageMod, Number);
    this.PercentMovementSpeedMod = convert(data.PercentMovementSpeedMod, Number);
    this.PercentPhysicalDamageMod = convert(data.PercentPhysicalDamageMod, Number);
    this.PercentSpellBlockMod = convert(data.PercentSpellBlockMod, Number);
    this.PercentSpellVampMod = convert(data.PercentSpellVampMod, Number);
    this.rFlatArmorModPerLevel = convert(data.rFlatArmorModPerLevel, Number);
    this.rFlatArmorPenetrationMod = convert(data.rFlatArmorPenetrationMod, Number);
    this.rFlatArmorPenetrationModPerLevel = convert(data.rFlatArmorPenetrationModPerLevel, Number);
    this.rFlatCritChanceModPerLevel = convert(data.rFlatCritChanceModPerLevel, Number);
    this.rFlatCritDamageModPerLevel = convert(data.rFlatCritDamageModPerLevel, Number);
    this.rFlatDodgeMod = convert(data.rFlatDodgeMod, Number);
    this.rFlatDodgeModPerLevel = convert(data.rFlatDodgeModPerLevel, Number);
    this.rFlatEnergyModPerLevel = convert(data.rFlatEnergyModPerLevel, Number);
    this.rFlatEnergyRegenModPerLevel = convert(data.rFlatEnergyRegenModPerLevel, Number);
    this.rFlatGoldPer10Mod = convert(data.rFlatGoldPer10Mod, Number);
    this.rFlatHPModPerLevel = convert(data.rFlatHPModPerLevel, Number);
    this.rFlatHPRegenModPerLevel = convert(data.rFlatHPRegenModPerLevel, Number);
    this.rFlatMPModPerLevel = convert(data.rFlatMPModPerLevel, Number);
    this.rFlatMPRegenModPerLevel = convert(data.rFlatMPRegenModPerLevel, Number);
    this.rFlatMagicDamageModPerLevel = convert(data.rFlatMagicDamageModPerLevel, Number);
    this.rFlatMagicPenetrationMod = convert(data.rFlatMagicPenetrationMod, Number);
    this.rFlatMagicPenetrationModPerLevel = convert(data.rFlatMagicPenetrationModPerLevel, Number);
    this.rFlatMovementSpeedModPerLevel = convert(data.rFlatMovementSpeedModPerLevel, Number);
    this.rFlatPhysicalDamageModPerLevel = convert(data.rFlatPhysicalDamageModPerLevel, Number);
    this.rFlatSpellBlockModPerLevel = convert(data.rFlatSpellBlockModPerLevel, Number);
    this.rFlatTimeDeadMod = convert(data.rFlatTimeDeadMod, Number);
    this.rFlatTimeDeadModPerLevel = convert(data.rFlatTimeDeadModPerLevel, Number);
    this.rPercentArmorPenetrationMod = convert(data.rPercentArmorPenetrationMod, Number);
    this.rPercentArmorPenetrationModPerLevel = convert(data.rPercentArmorPenetrationModPerLevel, Number);
    this.rPercentAttackSpeedModPerLevel = convert(data.rPercentAttackSpeedModPerLevel, Number);
    this.rPercentCooldownMod = convert(data.rPercentCooldownMod, Number);
    this.rPercentCooldownModPerLevel = convert(data.rPercentCooldownModPerLevel, Number);
    this.rPercentMagicPenetrationMod = convert(data.rPercentMagicPenetrationMod, Number);
    this.rPercentMagicPenetrationModPerLevel = convert(data.rPercentMagicPenetrationModPerLevel, Number);
    this.rPercentMovementSpeedModPerLevel = convert(data.rPercentMovementSpeedModPerLevel, Number);
    this.rPercentTimeDeadMod = convert(data.rPercentTimeDeadMod, Number);
    this.rPercentTimeDeadModPerLevel = convert(data.rPercentTimeDeadModPerLevel, Number);
  }
}

exports = module.exports = BasicDataStatsDto;
